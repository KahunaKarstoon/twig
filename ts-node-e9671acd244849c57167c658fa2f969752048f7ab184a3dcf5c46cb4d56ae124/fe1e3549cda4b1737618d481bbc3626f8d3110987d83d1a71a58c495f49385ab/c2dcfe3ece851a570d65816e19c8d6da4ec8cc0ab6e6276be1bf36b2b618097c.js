"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var protractor_1 = require("protractor");
var app_po_1 = require("../PageObjects/app.po");
var utils_1 = require("../utils");
describe('Events and Sequences', function () {
    var page;
    beforeAll(function () {
        page = new app_po_1.TwigPage();
        page.navigateTo();
        page.user.loginDefaultTestUser();
        page.header.twigletTab.deleteTwigletIfNeeded(utils_1.twigletName, page);
        protractor_1.browser.waitForAngular();
        utils_1.createDefaultJsonImportedTwiglet(page);
        protractor_1.browser.waitForAngular();
    });
    afterAll(function () {
        // browser.manage().logs().get('browser').then(function(browserLog) {
        //   console.log('log: ' + require('util').inspect(browserLog));
        // });
        utils_1.deleteDefaultJsonImportedTwiglet(page);
    });
    describe('Adding an event', function () {
        beforeAll(function () {
            page.accordion.goToMenu('Events');
        });
        it('pops up the create event modal', function () {
            page.accordion.eventsMenu.startNewEventProcess();
            expect(page.formForModals.modalTitle).toEqual('Create New Event');
        });
        it('makes sure event names are unique', function () {
            page.formForModals.fillInTextFieldByLabel('Name', 'event1');
            expect(page.formForModals.getErrorByLabel('Name')).toEqual('Names must be unique.');
        });
        it('can save the event', function () {
            page.formForModals.fillInTextFieldByLabel('Name', 'event3');
            page.formForModals.clickButton('Create');
            page.formForModals.waitForModalToClose();
            page.formForModals.waitForModalToClose();
            expect(page.formForModals.isModalOpen).toBeFalsy();
        });
        it('adds the event', function () {
            expect(page.accordion.eventsMenu.eventCount).toEqual(3);
        });
    });
    describe('Previewing an event', function () {
        beforeAll(function () {
            protractor_1.browser.waitForAngular();
            page.header.twigletEditTab.startTwigletEditProcess();
            page.header.twigletEditTab.addNodeByTooltip('ent1');
            page.formForModals.fillInTextFieldByLabel('Name', 'node 1');
            page.formForModals.clickButton('Add Node');
            page.formForModals.waitForModalToClose();
            page.header.twigletEditTab.saveEdits();
            page.formForModals.fillInOnlyTextField('Commit message');
            page.formForModals.clickButton('Save Changes');
            page.formForModals.waitForModalToClose();
            page.accordion.goToMenu('Events');
        });
        it('shows the correct number of nodes for event', function () {
            page.accordion.eventsMenu.previewEvent('event2');
            expect(page.twigletGraph.nodeCount).toEqual(15);
            page.accordion.eventsMenu.previewEvent('event2');
        });
    });
    describe('Creating a sequence', function () {
        it('can create a sequence', function () {
            page.accordion.eventsMenu.startNewEventProcess();
            page.formForModals.fillInTextFieldByLabel('Name', 'event4');
            page.formForModals.clickButton('Create');
            page.formForModals.waitForModalToClose();
            page.accordion.eventsMenu.toggleEventCheck('event1');
            page.accordion.eventsMenu.toggleEventCheck('event3');
            page.accordion.eventsMenu.startNewSequenceProcess();
            expect(page.formForModals.modalTitle).toEqual('Create New Sequence');
        });
        it('makes sure event sequence names are unique', function () {
            page.formForModals.fillInTextFieldByLabel('Name', 'sequence1');
            expect(page.formForModals.getErrorByLabel('Name')).toEqual('Names must be unique.');
        });
        it('can save the sequence', function () {
            page.formForModals.fillInTextFieldByLabel('Name', 'sequence2');
            page.formForModals.clickButton('Create');
            page.formForModals.waitForModalToClose();
            expect(page.formForModals.isModalOpen).toBeFalsy();
        });
        it('sequence list should display the correct number of sequences', function () {
            expect(page.accordion.eventsMenu.sequenceCount).toEqual(2);
        });
    });
    describe('Viewing a sequence', function () {
        it('shows the correct checked events', function () {
            expect(page.accordion.eventsMenu.checkedEvent('event3')).toBeTruthy();
        });
        it('ends the play sequence and displays current twiglet', function () {
            page.accordion.eventsMenu.startSequencePlay();
            page.accordion.eventsMenu.waitForPlayback();
            expect(page.twigletGraph.linkCount).toEqual(15);
        });
    });
    describe('Overwriting a sequence', function () {
        it('brings up the save sequence modal when save is clicked', function () {
            page.accordion.eventsMenu.startViewSequenceProcess('sequence2');
            page.accordion.eventsMenu.toggleEventCheck('event1');
            page.accordion.eventsMenu.startSaveSequenceProcess('sequence2');
            expect(page.formForModals.modalTitle).toEqual('Edit Sequence');
        });
        it('closes the modal when submit is clicked', function () {
            page.formForModals.clickButton('Save Changes');
            page.formForModals.waitForModalToClose();
            protractor_1.browser.waitForAngular();
            expect(page.formForModals.isModalOpen).toBeFalsy();
        });
        it('shows the updated checked events', function () {
            page.accordion.eventsMenu.startViewSequenceProcess('sequence2');
            expect(page.accordion.eventsMenu.checkedEvent('event3')).toBeFalsy();
        });
    });
    describe('Deleting an event', function () {
        beforeAll(function () {
            page.accordion.goToMenu('Events');
        });
        it('disables the delete button if event is in sequence', function () {
            expect(page.accordion.eventsMenu.checkIfDeleteEnabled('event1')).toBeTruthy();
        });
        it('can bring up the delete event modal', function () {
            page.accordion.eventsMenu.startDeleteEventProcess('event4');
            expect(page.formForModals.modalTitle).toEqual('Delete event4');
        });
        it('disables the "Delete" button if the name does not match', function () {
            expect(page.formForModals.checkIfButtonEnabled('Delete')).toBeFalsy();
        });
        it('enables the button if the form is filled out correctly', function () {
            page.formForModals.fillInOnlyTextField('event4');
            expect(page.formForModals.checkIfButtonEnabled('Delete')).toBeTruthy();
        });
        it('should close the modal when the Delete button is pressed', function () {
            page.formForModals.clickButton('Delete');
            page.formForModals.waitForModalToClose();
            expect(page.formForModals.isModalOpen).toBeFalsy();
        });
        it('deletes the event', function () {
            expect(page.accordion.eventsMenu.eventCount).toEqual(3);
        });
    });
    describe('Deleting a sequence', function () {
        beforeAll(function () {
            page.accordion.goToMenu('Events');
        });
        it('can bring up the delete sequence modal', function () {
            page.accordion.eventsMenu.startDeleteSequenceProcess('sequence2');
            expect(page.formForModals.modalTitle).toEqual('Delete sequence2');
        });
        it('disables the "Delete" button if the name does not match', function () {
            expect(page.formForModals.checkIfButtonEnabled('Delete')).toBeFalsy();
        });
        it('enables the button if the form is filled out correctly', function () {
            page.formForModals.fillInOnlyTextField('sequence2');
            expect(page.formForModals.checkIfButtonEnabled('Delete')).toBeTruthy();
        });
        it('should close the modal when the Delete button is pressed', function () {
            page.formForModals.clickButton('Delete');
            page.formForModals.waitForModalToClose();
            expect(page.formForModals.isModalOpen).toBeFalsy();
        });
        it('deletes the sequence', function () {
            expect(page.accordion.eventsMenu.sequenceCount).toEqual(1);
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,